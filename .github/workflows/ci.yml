name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:

permissions:
  contents: read

jobs:
  build:
    name: Build, Lint, Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Test
        run: cargo test --all --all-features

      - name: Build release
        run: cargo build --release --all-features

      - name: Package binary (tag builds)
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          set -euo pipefail
          BIN=mdkloc
          case "${{ matrix.os }}" in
            windows-latest)
              OUT=${BIN}-windows-x86_64.exe; SRC=target/release/${BIN}.exe;;
            macos-latest)
              OUT=${BIN}-macos-x86_64; SRC=target/release/${BIN};;
            ubuntu-latest)
              OUT=${BIN}-linux-x86_64; SRC=target/release/${BIN};;
          esac
          cp "$SRC" "$OUT"

      - name: Upload artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-release
          path: mdkloc-*

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: dist/**/mdkloc-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
